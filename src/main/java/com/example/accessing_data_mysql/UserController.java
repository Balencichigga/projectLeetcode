package com.example.accessing_data_mysql;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.Optional;

@RestController // This means that this class is a Controller
@RequestMapping(path="/clients") // This means URL's start with /demo (after Application path)
public class UserController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public String addNewUser (@RequestBody User user) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        userRepository.save(user);
        return "Saved";
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<User> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }

    @PutMapping(path="/{id}")
    public User updateUser (@RequestBody User NewUser,@PathVariable Integer id) {
        Optional<User> existUser = userRepository.findById(id);
        User user = existUser.get();
        user.setUsername(NewUser.getUsername());
        user.setEmail(NewUser.getEmail());
        return userRepository.save(user);
    }
    
    @DeleteMapping("/{id}")
    public String deleteUsers(@PathVariable Integer id) {
        userRepository.deleteById(id);
        return "Deleted";
    }



}
